function isMobile() {
    var deviceWidth = $(window).width();
    if (deviceWidth < 600) {
        return true
    } else {
        return false
    }
}
var navHash = location.hash;
var allViewSections = $("body section.page");
var activeViewSection = $("body section.page.active");
var preloader = $(".preloader");
var mousewheelFactor = true;
var mousewheelFactorOffset = 1500;
var ViewPage = {
    name: undefined,
    state: undefined,
    type: "index",
    progress: 0,
    display: undefined,
    url: undefined,
    path: undefined,
    hash: undefined,
    section: {
        id: undefined,
        class: undefined,
        obj: undefined
    }
};

function setViewState() {
    var currentViewPage = Object.create(ViewPage);

    function setProp() {
        currentViewPage.hash = function() {
            var pageHash = location.hash;
            return pageHash
        };
        currentViewPage.name = function() {
            var pageName = this.hash().substring(1);
            if (pageName != "") {
                return pageName
            }
            if (location.pathname.includes("news") == true) {
                return "news"
            } else {
                if (pageName == "" && currentViewPage.hash() == "") {
                    return "home"
                }
            }
        };
        currentViewPage.display = function() {
            var activeSection = $(currentViewPage.section.obj()).get(0);
            var pageDisplay = $(activeSection).css("visibility");
            if (pageDisplay == "visible") {
                return true
            } else {
                return false
            }
        };
        currentViewPage.url = function() {
            var pageUrl = window.location.href;
            return pageUrl
        };
        currentViewPage.path = function() {
            var pagePath = window.location.pathname;
            return pagePath
        };
        currentViewPage.state = function() {
            return "start"
        };
        currentViewPage.section.id = function() {
            var sectionId = currentViewPage.name();
            if (sectionId != undefined) {
                return "#" + sectionId
            } else {
                return undefined
            }
        };
        currentViewPage.section.class = function() {
            var sectionClass = currentViewPage.name();
            return sectionClass
        };
        currentViewPage.section.obj = function() {
            var sectionClass = currentViewPage.section.class();
            var sectionObj;
            allViewSections.each(function() {
                if ($(this).hasClass(sectionClass) == true) {
                    sectionObj = this
                }
            });
            return sectionObj
        }
    }
    setProp();
    return currentViewPage
}
var getViewState = new function() {
    this.hash = setViewState().hash;
    this.name = setViewState().name;
    this.state = setViewState().state();
    this.type = setViewState().type;
    this.progress = setViewState().progress;
    this.display = setViewState().display();
    this.url = setViewState().url();
    this.path = setViewState().path();
    this.section = setViewState().section
};

function stateLog() {
    this.elem = getViewState;
    var logResult = "Current state is:\nname: " + this.elem.name() + "\nstate: " + this.elem.state + "\ntype: " + this.elem.type + "\nprogress: " + this.elem.progress + "\ndisplay: " + this.elem.display + "\nurl: " + this.elem.url + "\npath: " + this.elem.path + "\nhash: " + this.elem.hash() + "\nsection:\n id " + this.elem.section.id() + "\n class " + this.elem.section.class() + "\n obj " + this.elem.section.obj() + "";
    console.info("VIEW LOG:");
    console.info(logResult)
}

function deactiveViewSections() {
    allViewSections.each(function() {
        $(this).removeClass("active")
    })
}

function showViewSection(obj) {
    deactiveViewSections();
    var currentViewSection = $(obj);
    currentViewSection.addClass("active");
    setTimeout(function() {
        mousewheelFactor = true
    }, mousewheelFactorOffset)
}

function navElemActive() {
    var navState = getViewState.section.id();
    var navElem = ".nav-wrap .nav-elem";
    $(navElem).each(function() {
        var navElemLink = $(this).attr("data-page");
        if (navElemLink == navState) {
            $(navElem).removeClass("active");
            $(this).addClass("active")
        }
    })
}

function viewInit() {
    setViewState();
    var initialSection = getViewState.section.obj();
    showViewSection(initialSection);
    navElemActive()
}
var preloaderProgress = "section.preloader-progress";
var preloaderProgressCounter = "section.preloader-progress .counter";
var preloaderProgressLine = "section.preloader-progress .lines-wrap .line";

function preloaderProgressShow() {
    $(preloaderProgress).removeClass("hidden").addClass("active");
    preloaderProgressAnimateShow()
}

function preloaderProgressHide() {
    $(preloaderProgress).removeClass("active").addClass("hidden")
}

function preloaderProgressAnimateShow() {
    var showLinesDuration = 1e3;
    var linesAmount = $(preloaderProgressLine).length;
    var linesDelay = showLinesDuration / linesAmount;
    var showCounterDuration = showLinesDuration + linesDelay * linesAmount + linesDelay;
    var counterAnimeShow = anime({
        targets: preloaderProgressCounter,
        autoplay: false,
        duration: showCounterDuration,
        opacity: ["1", "1"],
        innerHTML: ["0", "100"],
        easing: "linear",
        round: 1,
        complete: function(anim) {
            preloaderProgressAnimateHide()
        }
    });
    var lineAnimeShow = anime({
        targets: preloaderProgressLine,
        autoplay: false,
        duration: showLinesDuration,
        translateX: ["-100%", "0%"],
        easing: "easeInOutCirc",
        delay: function(el, i, l) {
            return i * linesDelay
        }
    });
    counterAnimeShow.play();
    lineAnimeShow.play();
    return true
}

function preloaderProgressAnimateHide() {
    var preloaderSlideDuration = 800;
    var hideLinesDuration = 800;
    var hideCounterDuration = hideLinesDuration / 4;
    var linesAmount = $(preloaderProgressLine).length;
    var hideDelay = hideLinesDuration / linesAmount;
    var preloaderAnimeHide = anime({
        targets: preloaderProgress,
        autoplay: false,
        duration: preloaderSlideDuration,
        width: ["100%", "0%"],
        easing: [.7, 0, .3, 1],
        complete: function(anim) {
            preloaderProgressHide()
        }
    });
    var counterAnimeHide = anime({
        targets: preloaderProgressCounter,
        autoplay: false,
        duration: hideCounterDuration,
        easing: "linear",
        opacity: ["1", "0"],
        delay: hideDelay
    });
    var lineAnimeHide = anime({
        targets: preloaderProgressLine,
        autoplay: false,
        duration: hideLinesDuration,
        translateX: ["0%", "1000%"],
        easing: "easeInOutQuint",
        delay: hideDelay,
        complete: function(anim) {
            preloaderAnimeHide.play()
        }
    });
    counterAnimeHide.play();
    lineAnimeHide.play();
    return true
}
$(window).on("DOMContentLoaded", function() {
    preloaderProgressShow()
});
var preloaderEl = "section.preloader";
var showClass = "overlay-slide-out-left";
var hideClass = "overlay-slide-in-right";

function showSection(obj) {
    if (isMobile() != true) {
        $(preloaderEl).removeClass(hideClass);
        $(preloaderEl).addClass(showClass)
    }
    var currentSection = $(obj);
    if (isMobile() != true) {
        $(".nav-block").attr("style", "visibility: hidden; opacity: 0;");
        $(".sidebar-block").attr("style", "visibility: hidden; opacity: 0;")
    }
    allViewSections.attr("style", "visibility: hidden; opacity: 0;").removeClass("active");
    setTimeout(function() {
        if (isMobile() != true) {
            $(preloaderEl).removeClass(showClass);
            $(preloaderEl).addClass(hideClass);
            $(".nav-block").attr("style", "visibility: visible; opacity: 1;");
            $(".sidebar-block").attr("style", "visibility: visible; opacity: 1;")
        }
        currentSection.addClass("active").attr("style", "visibility: visible; opacity: 1;");
        setViewState()
    }, 800)
}
var pageStateQuery = ["home", "about", "music", "video", "news"];

function hashChange(page) {
    var setPage = page;
    var hash = window.location.hash;
    window.location.hash = setPage
}

function hashChangeNext() {
    var currentPage = getViewState.name();
    var currentIndex = 0;
    $.each(pageStateQuery, function(index, value) {
        if (currentPage == value) {
            currentIndex = index
        }
    });
    var targetPage = pageStateQuery[currentIndex + 1];
    if (targetPage != undefined) {
        hashChange(targetPage)
    }
}

function hashChangePrev() {
    var currentPage = getViewState.name();
    var currentIndex = 0;
    $.each(pageStateQuery, function(index, value) {
        if (currentPage == value) {
            currentIndex = index
        }
    });
    var targetPage = pageStateQuery[currentIndex - 1];
    if (targetPage != undefined) {
        hashChange(targetPage)
    }
}

function setPageState(state) {
    allViewSections.each(function() {
        $(this).removeClass("start").removeClass("middle").removeClass("end").removeClass("any")
    });
    var targetState = state;
    var currentState = getViewState.state;
    var currentPageObj = getViewState.section.obj();
    if (targetState == "end") {
        $(currentPageObj).removeClass("start").removeClass("middle").removeClass("any").addClass("end")
    } else {
        $(currentPageObj).removeClass("end").removeClass("middle").removeClass("any").addClass("start")
    }
    if (targetState == "middle") {
        $(currentPageObj).removeClass("start").removeClass("end").removeClass("any").addClass("middle")
    }
    if (targetState == "any") {
        $(currentPageObj).removeClass("start").removeClass("end").removeClass("middle").addClass("any")
    }
}
$(document).ready(function() {
    viewInit();
    var viewStateObj = getViewState.section.obj();
    $(".preloader-logo").addClass("hide");
    var sliderSpeed = 1e3;
    var homeContentWrap = $(".content-slider");
    var homeContentSwiper = new Swiper(homeContentWrap, {
        direction: "horizontal",
        simulateTouch: false,
        speed: sliderSpeed,
        breakpoints: {
            640: {
                speed: 600
            }
        },
        spaceBetween: 0,
        slidesPerView: 1,
        keyboard: false,
        pagination: {
            el: ".home-content .content-nav .controls-row .counter",
            type: "custom",
            renderCustom: function(swiper, current, total) {
                var trackEl = $(".article-nav .track .track-elem");
                var width = 0;
                width = 100 / total * current;
                trackEl.width(width + "%");
                if (current < 10) {
                    current = "00" + current
                } else {
                    current = "0" + current
                }
                if (total < 10) {
                    total = "00" + total
                } else {
                    total = "0" + total
                }
                $(".article-nav .counter").text(current + ".");
                $(".controls-row .counter .elem.from .text").text(current + ".");
                $(".controls-row .counter .elem.to .text").text(total + ".")
            }
        },
        on: {
            slideNextTransitionStart: function() {
                homeNavSwiper.slideNext()
            },
            slidePrevTransitionStart: function() {
                homeNavSwiper.slidePrev()
            }
        }
    });
    var homeTextContentWrap = $(".content-text-slider");
    var homeTextContentSwiper = new Swiper(homeTextContentWrap, {
        simulateTouch: false,
        speed: sliderSpeed,
        breakpoints: {
            640: {
                speed: 500
            }
        },
        spaceBetween: 0,
        slidesPerView: 1,
        effect: "fade",
        navigation: {
            nextEl: ".home-content .content-nav .navigation .nav-elems .elem.next",
            prevEl: ".home-content .content-nav .navigation .nav-elems .elem.prev"
        },
        fadeEffect: {
            crossFade: false
        },
        keyboard: false,
        mousewheel: {
            enabled: true,
            eventsTarged: ".content.home-content"
        }
    });
    homeTextContentSwiper.on("transitionStart", function() {
        var activeSlide = this.activeIndex;
        homeContentSwiper.slideTo(activeSlide)
    });
    homeTextContentSwiper.on("transitionEnd", function() {
        var activeSlide = this.activeIndex;
        homeContentSwiper.slideTo(activeSlide)
    });
    var homeNawWrap = $(".media");
    var homeNavSwiper = new Swiper(homeNawWrap, {
        direction: "vertical",
        autoHeight: true,
        speed: sliderSpeed,
        spaceBetween: 0,
        slidesPerView: 1,
        simulateTouch: false,
        navigation: false,
        keyboard: false,
        on: {
            init: function() {
                this.update()
            }
        }
    });
    $(window).on("hashchange", function() {
        setViewState();
        stateLog();
        var viewStateName = getViewState.name();
        var viewStateObj = getViewState.section.obj();
        showSection(viewStateObj);
        navElemActive()
    });
    $(window).on("hashchange", function() {
        if (getViewState.name() == "home") {
            homePageState()
        }
    });
    var postVideoBtn = $(".article-content .play-video-btn");
    var postVideoBtnSpan = $(".article-content .play-video-btn span");
    var postVideoProgressbar = $(".article-content .article-progress-bar-wrap .track .track-elem");
    var postVideoPlayer = $(".article-content .article-content-video-wrap video.player").get(0);
    postVideoBtn.on("click", function() {
        if ($(this).hasClass("play")) {
            postVideoControl.play()
        } else {
            postVideoControl.pause()
        }
    });
    var postVideoControl = {
        play: function() {
            postVideoPlayer.play();
            postVideoBtnSpan.text("Pause video");
            postVideoBtn.removeClass("play").addClass("pause")
        },
        pause: function() {
            postVideoPlayer.pause();
            postVideoBtnSpan.text("Play video");
            postVideoBtn.removeClass("pause").addClass("play")
        }
    };
    if ($(postVideoPlayer).length != 0) {
        postVideoPlayer.ontimeupdate = function videoProgressbar() {
            calculateProgress(postVideoProgressbar, postVideoPlayer);

            function calculateProgress(elem, video) {
                var totalTrackTime = video.duration;
                var currentTrackTime = video.currentTime;
                var progressPercentage = currentTrackTime / totalTrackTime * 100 + "%";
                var elemProgressbar = postVideoProgressbar;
                elemProgressbar.css("width", progressPercentage)
            }
        }
    }
    if ($(".article-content-container").length != 0) {
        setInterval(function() {
            var wintop = $(".article-content .article-content-container").scrollTop(),
                docheight = $(".article-content .article-content-block").height(),
                winheight = $(document).height();
            var totalScroll = wintop / (docheight - winheight) * 100;
            $(postVideoProgressbar).css("width", totalScroll + "%")
        }, 100)
    }
    if (isMobile() != false) {
        var counterElem = ".elem.from";
        homeContentSwiper.on("slideNextTransitionStart", function() {
            $(counterElem).addClass("next");
            homeContentSwiper.on("slideNextTransitionEnd", function() {
                $(counterElem).removeClass("next")
            })
        });
        homeContentSwiper.on("slidePrevTransitionStart", function() {
            $(counterElem).addClass("prev");
            homeContentSwiper.on("slidePrevTransitionEnd", function() {
                $(counterElem).removeClass("prev")
            })
        });
        $(".home-content").height(window.innerHeight + "px")
    }
    console.log("Created by ZIPL. \n Design: Albina Suslova \n Development: Pozdniakov Bohdan \n 2018")
});
